{"ast":null,"code":"var _jsxFileName = \"/home/pat/Desktop/penny_stocks/web/src/cards/CardBarChart.js\";\nimport React, { use } from \"react\";\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nconst data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'Page C',\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: 'Page D',\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'Page E',\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'Page F',\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\nconst initialState = {\n  master: [],\n  masterData: [],\n  data: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'set':\n      return { ...state,\n        master: action.arr\n      };\n\n    case 'setData':\n      return { ...state,\n        data: action.arr\n      };\n\n    case 'setMasterData':\n      return { ...state,\n        masterData: action.arr\n      };\n\n    default:\n      throw new Error('Unexpected action');\n  }\n};\n\nexport default function CardBarChart() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\",\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    width: 500,\n    height: 300,\n    data: data,\n    style: {\n      backgroundColor: 'white'\n    },\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"pv\",\n    fill: \"#8884d8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"uv\",\n    fill: \"#82ca9d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/pat/Desktop/penny_stocks/web/src/cards/CardBarChart.js"],"names":["React","use","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","data","name","uv","pv","amt","initialState","master","masterData","reducer","state","action","type","arr","Error","CardBarChart","dispatch","useReducer","backgroundColor","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { use} from \"react\";\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'Page C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: 'Page D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: 'Page E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: 'Page F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\n\nconst initialState = {\n  master: [],\n  masterData: [],\n  data: [],\n};\nconst reducer = (state, action) => {\nswitch (action.type) {\n  case 'set': return {...state, master: action.arr};\n  case 'setData': return {...state, data: action.arr}\n  case 'setMasterData': return {...state, masterData: action.arr};\n  default: throw new Error('Unexpected action');\n}\n};\n\nexport default function CardBarChart() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <>\n      <ResponsiveContainer width=\"100%\" height=\"100%\" style={{ backgroundColor: 'white'}}>\n        <BarChart\n          width={500}\n          height={300}\n          data={data}\n          style={{ backgroundColor: 'white'}}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"pv\" fill=\"#8884d8\" />\n          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}