{"ast":null,"code":"var _jsxFileName = \"/home/pat/Desktop/stock_strategy_builder/stock_strategy_builder/web/src/components/mainGraph/index.js\";\nimport React, { useEffect, useState, Component } from \"react\";\nimport CardCandleChart from \"../../cards/CardCandleChart\";\nimport CardLineChart from \"../../cards/CardLineChart\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return {\n    mainGraphType: state.mainGraphType\n  };\n};\n\nfunction ConnectedMainGraph(props) {\n  const [graphs, setGraphs] = useState([]);\n  const [keyCount, setKeyCount] = useState(0);\n  const [stateCount, setStateCount] = useState(0);\n  const line = /*#__PURE__*/React.createElement(CardLineChart, {\n    key: keyCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 18\n    }\n  });\n  const candle = /*#__PURE__*/React.createElement(CardCandleChart, {\n    key: keyCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 20\n    }\n  }); //setGraphs(prev => [...prev, line])\n\n  useEffect(() => {\n    if (stateCount !== 0) {} else setStateCount(prev => prev + 1);\n  }, [props.mainGraphType]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, graphs.map((item, index) => /*#__PURE__*/React.createElement(React.Fragment, null, item)));\n}\n\nconst MainGraph = connect(mapStateToProps)(ConnectedMainGraph);\nexport default MainGraph;","map":{"version":3,"sources":["/home/pat/Desktop/stock_strategy_builder/stock_strategy_builder/web/src/components/mainGraph/index.js"],"names":["React","useEffect","useState","Component","CardCandleChart","CardLineChart","connect","mapStateToProps","state","mainGraphType","ConnectedMainGraph","props","graphs","setGraphs","keyCount","setKeyCount","stateCount","setStateCount","line","candle","prev","map","item","index","MainGraph"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,aAAa,EAAED,KAAK,CAACC;AADlB,GAAP;AAGD,CAJH;;AAMA,SAASC,kBAAT,CAA4BC,KAA5B,EAAkC;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAMgB,IAAI,gBAAG,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEJ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb;AACA,QAAMK,MAAM,gBAAG,oBAAC,eAAD;AAAiB,IAAA,GAAG,EAAEL,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,CAL8B,CAM9B;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGe,UAAU,KAAK,CAAlB,EAAoB,CAEnB,CAFD,MAEOC,aAAa,CAACG,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAb;AAEV,GALQ,EAKN,CAACT,KAAK,CAACF,aAAP,CALM,CAAT;AAMA,sBACI,0CACCG,MAAM,CAACS,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,kBACR,0CACCD,IADD,CADH,CADD,CADJ;AAUH;;AAED,MAAME,SAAS,GAAGlB,OAAO,CACrBC,eADqB,CAAP,CAEZG,kBAFY,CAAlB;AAIE,eAAec,SAAf","sourcesContent":["import React, { useEffect, useState, Component } from \"react\";\nimport CardCandleChart from \"../../cards/CardCandleChart\";\nimport CardLineChart from \"../../cards/CardLineChart\"\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n    return { \n        mainGraphType: state.mainGraphType\n     };\n  };\n\nfunction ConnectedMainGraph(props){\n    const [graphs, setGraphs] = useState([]);\n    const [keyCount, setKeyCount] = useState(0);\n    const [stateCount, setStateCount] = useState(0)\n    const line = <CardLineChart key={keyCount} />;\n    const candle = <CardCandleChart key={keyCount} />\n    //setGraphs(prev => [...prev, line])\n    useEffect(() => {\n        if(stateCount !== 0){\n            \n        } else setStateCount(prev => prev + 1);\n\n    }, [props.mainGraphType])\n    return (\n        <>\n        {graphs.map((item, index) => (\n            <>\n            {item}\n            </>\n        ))}\n        </>\n\n    )\n}\n\nconst MainGraph = connect(\n    mapStateToProps\n    )(ConnectedMainGraph);\n  \n  export default MainGraph;"]},"metadata":{},"sourceType":"module"}