{"ast":null,"code":"import React from 'react';\nconst dataG = [['-0.1016470565515406/-3', 't:AUMN/588', '-1:-0.07523529845125532', '-2:-0.08688235633513508', 'MM:-0.1016470565515406', 'last_p:0.7099999785423279'], ['-0.02029416701372888/-1', 't:AUY/598', 'MM:-0.02029416701372888', '-2:-0.07705887345706675', '-3:-0.10617656146778831', 'last_p:4.659999847412109'], ['-0.4567647064433382/-1', 't:AWRE/631', 'MM:-0.4567647064433382', -'2:-0.42211768066181854', '-3:-0.38935302005094563', 'last_p:3.950000047683716'], ['-0.006969941286917997/-1', 't:BANT/680', 'MM:-0.006969941286917997', '-2:-0.005754411823171025', '-3:-0.003091470250750291', 'last_p:0.020840000361204147'], ['0.01882351286271078/-1', 't:BBD/691', 'MM:0.01882351286271078', -'2:-0.03200006344739137', '-3:-0.07611768245697004', 'last_p:4.630000114440918'], ['1.7924706795636345/-3', 't:BBW/702', '-1:1.5948824798359595', '-2:1.7534707349889427', 'MM:1.7924706795636345', 'last_p:8.380000114440918'], ['0.03188352453358034/-1', 't:BDIC/736', 'MM:0.03188352453358034', '-2:0.036442346739418374', '-3:0.047011465929886864', 'last_p:0.3799999952316284']];\nuseEffect(() => {\n  const url = `http://localhost:5000/${queStock}`;\n  const arr = [];\n  /*axios(url, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    }\n  })\n  .then(response => {for(let x=0;x < response.data.length;x++){arr.push(response.data[x])}})\n  setStockData(arr)*/\n\n  const getData = async () => {\n    await axios.get(`http://localhost:5000/${queStock}`, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      //const data = JSON.parse(res.data);\n      setStockData(res.data.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  getData();\n}, [queStock]); // Creating the context object and passing the default values. \n\nconst dataContext = React.createContext({\n  data: dataG\n});\nexport default dataContext;","map":{"version":3,"sources":["/home/pat/Desktop/penny_stocks/web/src/gData.js"],"names":["React","dataG","useEffect","url","queStock","arr","getData","axios","get","headers","then","res","setStockData","data","catch","err","console","log","dataContext","createContext"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,KAAK,GAAG,CACV,CAAC,wBAAD,EAA0B,YAA1B,EAAuC,yBAAvC,EAAkE,yBAAlE,EAA4F,wBAA5F,EAAqH,2BAArH,CADU,EAEV,CAAC,yBAAD,EAA2B,WAA3B,EAAuC,yBAAvC,EAAiE,yBAAjE,EAA2F,yBAA3F,EAAqH,0BAArH,CAFU,EAGV,CAAC,wBAAD,EAA0B,YAA1B,EAAuC,wBAAvC,EAAgE,CAAC,wBAAjE,EAA0F,yBAA1F,EAAoH,0BAApH,CAHU,EAIV,CAAC,0BAAD,EAA4B,YAA5B,EAAyC,0BAAzC,EAAoE,0BAApE,EAA+F,0BAA/F,EAA0H,6BAA1H,CAJU,EAKV,CAAC,wBAAD,EAA0B,WAA1B,EAAsC,wBAAtC,EAA+D,CAAC,wBAAhE,EAAyF,yBAAzF,EAAmH,0BAAnH,CALU,EAMV,CAAC,uBAAD,EAAyB,WAAzB,EAAqC,uBAArC,EAA6D,uBAA7D,EAAqF,uBAArF,EAA6G,0BAA7G,CANU,EAOV,CAAC,wBAAD,EAA0B,YAA1B,EAAuC,wBAAvC,EAAgE,yBAAhE,EAA0F,yBAA1F,EAAoH,2BAApH,CAPU,CAAd;AAUAC,SAAS,CAAC,MAAM;AACZ,QAAMC,GAAG,GAAI,yBAAwBC,QAAS,EAA9C;AACA,QAAMC,GAAG,GAAG,EAAZ;AACA;;;;;;;;AASA,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAMC,KAAK,CAACC,GAAN,CAAW,yBAAwBJ,QAAS,EAA5C,EAA+C;AACnDK,MAAAA,OAAO,EAAE;AACP,uCAA+B;AADxB;AAD0C,KAA/C,EAKLC,IALK,CAKCC,GAAD,IAAS;AACb;AACAC,MAAAA,YAAY,CAACD,GAAG,CAACE,IAAJ,CAASA,IAAV,CAAZ;AACD,KARK,EASLC,KATK,CASCC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAXK,CAAN;AAYD,GAbD;;AAcAT,EAAAA,OAAO;AAER,CA5BM,EA4BJ,CAACF,QAAD,CA5BI,CAAT,C,CA8BA;;AACA,MAAMc,WAAW,GAAGlB,KAAK,CAACmB,aAAN,CAAoB;AACpCN,EAAAA,IAAI,EAAEZ;AAD8B,CAApB,CAApB;AAIA,eAAeiB,WAAf","sourcesContent":["\nimport React from 'react'; \n\n\nconst dataG = [\n    ['-0.1016470565515406/-3','t:AUMN/588','-1:-0.07523529845125532', '-2:-0.08688235633513508','MM:-0.1016470565515406','last_p:0.7099999785423279'],\n    ['-0.02029416701372888/-1','t:AUY/598','MM:-0.02029416701372888','-2:-0.07705887345706675','-3:-0.10617656146778831','last_p:4.659999847412109'],\n    ['-0.4567647064433382/-1','t:AWRE/631','MM:-0.4567647064433382',-'2:-0.42211768066181854','-3:-0.38935302005094563','last_p:3.950000047683716'],\n    ['-0.006969941286917997/-1','t:BANT/680','MM:-0.006969941286917997','-2:-0.005754411823171025','-3:-0.003091470250750291','last_p:0.020840000361204147'],\n    ['0.01882351286271078/-1','t:BBD/691','MM:0.01882351286271078',-'2:-0.03200006344739137','-3:-0.07611768245697004','last_p:4.630000114440918'],\n    ['1.7924706795636345/-3','t:BBW/702','-1:1.5948824798359595','-2:1.7534707349889427','MM:1.7924706795636345','last_p:8.380000114440918'],\n    ['0.03188352453358034/-1','t:BDIC/736','MM:0.03188352453358034','-2:0.036442346739418374','-3:0.047011465929886864','last_p:0.3799999952316284']\n\n];\nuseEffect(() => {\n    const url = `http://localhost:5000/${queStock}`;\n    const arr = [];\n    /*axios(url, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      }\n    })\n    .then(response => {for(let x=0;x < response.data.length;x++){arr.push(response.data[x])}})\n    setStockData(arr)*/\n\n\n    const getData = async () => {  \n      await axios.get(`http://localhost:5000/${queStock}`, {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n        }\n      })  \n      .then((res) => {  \n        //const data = JSON.parse(res.data);\n        setStockData(res.data.data) \n      })\n      .catch(err => {  \n        console.log(err)  \n      });  \n    }  \n    getData()\n\n  }, [queStock])\n  \n// Creating the context object and passing the default values. \nconst dataContext = React.createContext({\n    data: dataG\n}); \n  \nexport default dataContext;\n"]},"metadata":{},"sourceType":"module"}